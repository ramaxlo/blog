<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vyos on Random blog</title>
    <link>https://ramaxlo.github.io/blog/tags/vyos/</link>
    <description>Recent content in vyos on Random blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <copyright>&amp;copy; Ramax Lo 2020</copyright>
    <lastBuildDate>Sat, 09 Mar 2019 22:21:19 +0800</lastBuildDate><atom:link href="https://ramaxlo.github.io/blog/tags/vyos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 APU2 架設家庭路由器</title>
      <link>https://ramaxlo.github.io/blog/post/apu2-home-router/</link>
      <pubDate>Sat, 09 Mar 2019 22:21:19 +0800</pubDate>
      
      <guid>https://ramaxlo.github.io/blog/post/apu2-home-router/</guid>
      <description>有鑑於家中網路使用的頻寬分享器主要是由 ISP 所提供，其設備老舊，缺乏韌體更新，也缺少一些更進階的設定，讓我覺得該是時候將路由器的角色改由我最近把玩的 APU2 來代替，而原本的設備則單純做為 PPPoE relay 的角色。因此我將家中網路架構做了改變如下：
 使用 APU2 透過 PPPoE 撥接至 ISP，並做為對外網路的唯一介面 LAN 端電腦透過 switch 接至 APU2 的 LAN port 將原本設備的 virtual server 設定搬移至 APU2 架設 Wireguard VPN，並關閉對外的 web 與 sftp port 啟動 DNS forwarder 設定 zone based firewall，讓防火牆設定更容易管理  當然在轉換過程中也碰到了一些之前沒遇到的問題：
 由於 PPPoE header 會佔用 8 byte 的長度，因此 TCP MSS (Maximum segmemnt size) 必須要減掉 8 byte，否則封包會傳不出去。詳情可見這個文章。VyOS 的設定在此。 原本想設定路由器作為 wifi ap，然而測試後發現只能設定為 11n 模式，且速率並不是很理想，另外還有相容性的問題，因此還是決定使用現成的 wifi ap 來架設無線網路。  架設完成後，使用上並不會感覺到網路速度有受到什麼影響，不過現在網路設定更容易維護，且路由軟體也可以很容易地升級 (畢竟是開放源碼系統)，算是一舉數得。</description>
    </item>
    
    <item>
      <title>VyOS 發布方式改變</title>
      <link>https://ramaxlo.github.io/blog/post/vyos-model-change/</link>
      <pubDate>Wed, 06 Feb 2019 15:42:36 +0800</pubDate>
      
      <guid>https://ramaxlo.github.io/blog/post/vyos-model-change/</guid>
      <description>這一篇文章其實是在 1.2 版發布前所寫的，有別於技術細節，這個比較是在談關於 VyOS 這個專案的未來走向，因此特別另外開新的文章來討論這個部分。
之前有提到過，其實 VyOS 是個挺小眾的專案。在 DistroWatch 的排名第 77 位，在 google trend 上的搜尋熱度也遠遠不如 PfSense。這些 VyOS 的使用者主要分為二類；一類是網路玩家，喜歡測試新功能甚於穩定性，主要會在家中或實驗室建置網路，或是某些小公司也可以用得很高興。另外一類則是大企業的網管人員，他們以穩定性為最高指導原則，所以如果新版本不夠穩定，他們是不會花時間升級的。
以 VyOS 專案來說，大部分的使用者屬於第二類使用者，因此維護者們必須小心地測試新版本以確保新的修改不會造成任何的副作用，但這也意味著新版本發布週期會拉的很長，使得玩家們遲遲等不到新功能來測試並回報問題。另外一方面，第二類使用者在使用之餘，幾乎對該專案本身沒有任何實質上的貢獻；他們只是用，也不回報問題，也沒付錢買服務，但又要求要穩定，這對於只有少數開發者與貢獻者1的專案來說，不是一個健康的情況。
因此，基於以上的理由，VyOS 決定要改變發布新版本的方式：
 提供滾動式版本 (rolling release) 給想要嘗鮮的玩家們測試，並且開發者能夠在短時間內測試他們貢獻的新功能。 提供長期支援版本 (Long Term Support, LTS) 給企業用戶使用。LTS 版本會有二年的維護週期，在這期間內，維護者會持續測試並加入新的 bugfix 與安全更新。  然而與滾動式版本另外的不同處則是，滾動式版本的映象檔可以自由下載，LTS 版本的則只提供給付費用戶下載。也就是說，若你是企業用戶且又不想花時間自己 build LTS 版的映象檔，那麼就請花錢訂閱服務以取得更新。為了怕人誤解，以為 VyOS 又要走回 Vyatta 的老路，作者還強調你永遠可以自己 build 出 LTS 版的 iso 檔。
此外，作者也開放貢獻者方案，也就是若你過去曾經貢獻過 VyOS 專案，那麼你可以免費得到 LTS iso 訂閱服務 (小弟也很不要臉地去要了一個 XD)。
當然有些細節部分這裡就略過不提，我個人認為這樣的安排是合理的，畢竟在現在如此冷門的情況下，如果缺乏商業資金的挹注，開源專案就必須靠著眾人的熱情持續下去。然而熱情能夠持續多久又是個問題…若能夠利用付費服務的方式來贊助專案的開發，至少開發者們不用為了生計問題傷腦筋，也才有更多心力花在專案上。雖然我並不是對這個專案很有愛，但我很喜歡它命令列的設定方式，算是除了 RouterOS 外的開源替代品。真的希望它能夠繼續活下去…
  作者提到，在某一個大型模組中，過去五年有貢獻程式碼的人不超過 50 個。 &amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>Upgrade VyOS on APU2 to Version 1.2</title>
      <link>https://ramaxlo.github.io/blog/post/vyos-apu2-12-update/</link>
      <pubDate>Wed, 06 Feb 2019 14:05:30 +0800</pubDate>
      
      <guid>https://ramaxlo.github.io/blog/post/vyos-apu2-12-update/</guid>
      <description>VyOS 下一個主要版本 1.2 終於在今年 1 月 28 號正式發布。1.2 版本究竟開發了多久，沒仔細查其實我也不很清楚，只知道應該開發了超過一年的時間…不過其實想想也是合理啦，這麼冷門的專案，人力不足是可以預期的…
雖然早已知道新版本出來了，我超想幫我的 APU2 升級的 (之前是跑 1.1.8)；然而由於工作忙碌的關係，一直抽不出一段空閒的時間來好好的弄一下。直到最近因為過年輪到我在公司值班，算是找到了一個好機會可以來玩玩。
相較於 1.1 版是在 Debian 6 上開發，1.2 版則是基於 Debian 8 做開發，也因此在 isolinux 以及其他的設定上有了比較大的差異，以至於之前在 Wiki 上的文件已不再適用於 1.2 版，需要再做更新。需要更新的部分如下：
 isolinux 的設定相較 1.1 有了很大的變化。供 serial port only 的機器使用的選項不見了，只有純 VGA console 的開機選單可用，因此這部分需要做比較大的修改以符合 APU2 的需求。 設定檔的格式從 1.1 升級到 1.2 有了比較大的修改，因此在 1.2 中有部分的 script 是在做格式轉換的工作。這部分的 baud rate 設定是寫死成 9600，故也需要做修改。 1.2 中安裝程式提供了一個 grub 設定檔的模版，這部分也是寫死成 9600，故需要做修改。  前前後後大概花了我二天的時間做修改與測試，總算是弄好了。這些修改我也一併更新到 Wiki 上，供同好參考。
註：自從上次把 1.1.7 的安裝步驟更新到 wiki 後，發現似乎愈來愈多人在論壇上問關於在 APU2 上安裝的問題…怎麼說呢…我覺得 APU2 真的是個好物啊，價格實惠 (網路上隨便一個 x86 的單板電腦，價格都差不多要比 APU2 貴上個四分之一以上)、效能夠用 (直上 300 / 100 沒問題)，再加上免費的 VyOS 簡直是絕配啊…真的很想把家中的分享器都換成 APU2 啊…</description>
    </item>
    
    <item>
      <title>Install VyOS on APU2</title>
      <link>https://ramaxlo.github.io/blog/post/vyos-on-apu2/</link>
      <pubDate>Sat, 08 Jul 2017 13:49:38 +0800</pubDate>
      
      <guid>https://ramaxlo.github.io/blog/post/vyos-on-apu2/</guid>
      <description>由於之前把玩 RouterBoard 的經驗，讓我還想再找找看有沒有其他軟路由的替代方案。原因主要是因為 RouterOS 雖然也是 Linux based 的系統，但只有 base system 是開源軟體，其他 MikroTik 開發的應用程式仍然還是封閉軟體。雖然它的效能也很不錯，設定上也非常有彈性，也很穩定，但對於一個已經用慣 FOSS 的人來說，心裡還是有些疙瘩。
在網路上尋尋覓覓一陣子，發現蠻多網友使用 PC Engines 的嵌入式 x86 主板 APU2 上跑 pfSense 這個 BSD based 的防火牆軟體。看一下硬體規格，有三張 intel Gb 網卡，價格 125 美金，還可以加購外殼，其他配件加起來大約台幣 5000 出頭吧，比起其他廠牌類似規格的要便宜許多，於是就下單訂了一台。
出貨後等了約莫二個禮拜才送到。在這段期間，我開始思考應該裝什麼系統才好。我不太想裝 pfSense，我想找看看有沒有 Linux based 的軟路由可以安裝；IPFire 是其中還蠻有名的開源專案，也是透過 Web 介面來設定，不過感覺好像也沒什麼特別的地方；後來找到了另外一個專案 VyOS，它有個很特別的東西讓我眼睛一亮：它不提供 Web 介面，所有的設定都必須要透過 CLI 完成；它提供了類似於 Cisco ios 的 shell 來設定網路。稍微看了 wiki 文件後，就決定要來安裝它了。
上網搜尋一下才發現，似乎很少人在 APU2 上面安裝 VyOS，大部分不是裝 pfSense 就是裝 Ubuntu；比較有關的只有這篇文章，但這個也是安裝在前一代的產品上，並非 APU2；心想如果要裝上去，看來得要和機器奮戰一陣子了。
APU2 這塊板子也很特別，很多市面上賣的 x86 路由器都會提供 VGA port，偏偏 APU2 只提供 serial port，這意味著安裝程式必須要支援 serial console，而非僅僅 graphic console。所幸目前看到的軟路由安裝程式皆已考慮到這點，兩者都有支援，VyOS 自然也支援 serial console。不過它是寫死 9600 baud，然而 APU2 似乎只支援 115200，這會造成開機時無法顯示開機選單，於是我花了不少時間在修改 VyOS iso 映像檔內的 baud rate 設定。</description>
    </item>
    
  </channel>
</rss>
