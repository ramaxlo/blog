<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Random blog</title>
    <link>https://ramaxlo.github.io/blog/index.xml</link>
    <description>Recent content on Random blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <copyright>&amp;copy; Ramax Lo 2016</copyright>
    <lastBuildDate>Mon, 16 Jan 2017 02:17:56 +0800</lastBuildDate>
    <atom:link href="https://ramaxlo.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>掌控你的電腦的自由</title>
      <link>https://ramaxlo.github.io/blog/post/freedom-controlling-your-machine/</link>
      <pubDate>Mon, 16 Jan 2017 02:17:56 +0800</pubDate>
      
      <guid>https://ramaxlo.github.io/blog/post/freedom-controlling-your-machine/</guid>
      <description>&lt;p&gt;最近觀摩了一下同事所寫的 Ansible playbook，能夠自動啟動多個 AWS EC2
實體，果然精妙。當中討論到為何在某個設定為何要把 Python 的路徑設為
&lt;code&gt;/usr/local/bin/python&lt;/code&gt;，而非一般的 &lt;code&gt;/usr/bin/python&lt;/code&gt; 時，同事回答說因為 Mac OS 的
Python 版本太舊，無法跑某些 task，不這樣設的話，Ansible
預設只會用 Mac OS 的版本。然後我就很白目地問了：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;為什麼不把 /usr/bin/python 砍掉，然後建一個 symlink 指向新版本？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;身為一個 Linux 的使用者，會做這樣類似的事情是很正常的；例如在安裝完 ubuntu 後，我習慣會把
&lt;code&gt;/bin/sh&lt;/code&gt; 砍掉，重新指向到 &lt;code&gt;/bin/bash&lt;/code&gt;。但是同事回我說不行，在 Mac OS
下，你不能動 &lt;code&gt;/usr/bin&lt;/code&gt; 目錄下的內容，即使你是 root 也不行。&lt;/p&gt;

&lt;p&gt;蛤？？？我沒聽錯吧？&lt;/p&gt;

&lt;p&gt;後來查了一下，原來這招叫做 &lt;a href=&#34;https://en.wikipedia.org/wiki/System_Integrity_Protection&#34;&gt;System Integrity Protection&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;我可以理解，這樣做的原因是為了安全性考量，如果是一般不懂資安的使用者，那也就算了；但對於 power user
而言，大家都是專業人士，這樣做我只覺得不可思議。我了解我在做什麼事情，我也體認到會有什麼樣的風險，也取得
root 權限了，我要對我的電腦做什麼事是我的自由，為何要剝奪我的自由？&lt;/p&gt;

&lt;p&gt;固然資安非常重要，但根本之道應該是要教育使用者要有資安意識；身為你所購買電腦的主人，你有責任要維持電腦的正常運作不是嗎？要經常安裝重大安全性更新，不隨便亂執行來路不明的軟體，不隨便亂點奇怪的網站……這樣才能讓你的電腦永保安康；而不是硬生生地直接把使用者掌控電腦的權力拿掉，這根本是因噎廢食的作法。若使用者缺乏正確的觀念，你限制再多也無法阻止電腦被駭客入侵。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Add M.2 SSD For T450</title>
      <link>https://ramaxlo.github.io/blog/post/t450-add-ssd/</link>
      <pubDate>Wed, 11 Jan 2017 23:58:08 +0800</pubDate>
      
      <guid>https://ramaxlo.github.io/blog/post/t450-add-ssd/</guid>
      <description>

&lt;p&gt;2016 年的最後一天，大家都要去跨年，但是我沒去。在這一年將要結束的這一天，我決定要幫我的 Lenovo T450
擴充硬碟空間，並且要在安裝後還能夠恢復原來的工作環境。這是一個大工程，值得我用一天的時間好好地搞一搞。&lt;/p&gt;

&lt;p&gt;根據 Lenovo 的&lt;a href=&#34;https://download.lenovo.com/pccbbs/mobiles_pdf/t450_hmm_en_sp40a27225.pdf&#34;&gt;硬體維護手冊&lt;/a&gt;，T450
有二個 M.2 插槽；其中一個已被 Wifi 網卡使用，另一個則原本是供 WWAN 使用，但若未購買搭 WWAN
的機器，就會多出一個插槽可供利用。另外需要注意的是，M.2 介面的 SSD 有二種通訊協定規格，一個是
SATA，另一個是 PCIe，並不是所有的筆電都支援這二種協定，故購買前一定要先上網查清楚，以免白花錢。又還有一點要注意，就算你確定了通訊協定規格，也不是所有廠商的 SSD 都可以和你的筆電相容，多查查網上的討論串，儘可能買有成功案例的廠牌會比較保險些。總之 M.2 SSD 就是這麼麻煩的東西。&lt;/p&gt;

&lt;p&gt;有興趣的人可以參考這個&lt;a href=&#34;http://www.tpuser.idv.tw/wp/?p=2647&#34;&gt;連結&lt;/a&gt;了解更多關於 M.2 SSD 的細節。&lt;/p&gt;

&lt;p&gt;好啦，買好了 SSD，也順利地安裝上去（硬體安裝步驟略過不提），打開筆電開關，BIOS 也順利抓到了硬體，接下來才是工程的主要部分：搬移系統檔案，設定以 SSD 為開機硬碟。以下將大略走一下執行步驟。&lt;/p&gt;

&lt;h1 id=&#34;準備工作&#34;&gt;準備工作&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下載 &lt;a href=&#34;https://software.opensuse.org&#34;&gt;openSUSE 開機映象檔&lt;/a&gt;，寫入到 USB 隨身碟中：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dd if=openSUSE-Leap-42.2-DVD-x86_64.iso of=/dev/sdX bs=1M
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;當然你也可以用其他的 Linux 開機映象檔，只要有具備救援模式功能即可。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;備份你的系統。BJ4&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;開始搬移&#34;&gt;開始搬移&lt;/h1&gt;

&lt;p&gt;首先用 USB 隨身碟開機，選擇救援模式，進入到命令列模式，然後分割 SSD 並且格式化：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fdisk /dev/sdX
mkfs.ext4 /dev/sdX1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接著將原系統磁區掛載到 &lt;code&gt;/tmp/root&lt;/code&gt;, SSD 磁區掛載到 &lt;code&gt;/tmp/root2&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /tmp/root
mkdir /tmp/root2
mount /dev/sdY1 /tmp/root
mount /dev/sdX1 /tmp/root2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;開始複製檔案：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rsync -auv --exclude=&amp;quot;lost+found&amp;quot; /tmp/root/ /tmp/root2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;複製的時間可能會很久，端看你的資料量而定。&lt;/p&gt;

&lt;h1 id=&#34;更新系統設定檔&#34;&gt;更新系統設定檔&lt;/h1&gt;

&lt;p&gt;最重要的檔案就是 &lt;code&gt;/etc/fstab&lt;/code&gt;，這個檔案控制了使用那一個磁區來掛載 root 檔案系統，故當你搬移完系統檔案後，一定要記得更新這個檔案。&lt;/p&gt;

&lt;p&gt;原來的檔案內容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;UUID=dedaf79c-24e4-468f-a03c-7616cdfa8385 swap          swap       defaults              0 0
UUID=e9912870-b350-4040-9ed3-386a4a5f849e /             ext4       acl,user_xattr        1 1
UUID=77ec7af0-cc2c-44a5-8bc3-6c7913273ab6 /home         ext4       acl,user_xattr        1 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更新為：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;UUID=dedaf79c-24e4-468f-a03c-7616cdfa8385 swap          swap       defaults              0 0
UUID=cc3aa415-2c1f-43bd-a810-e0cf3d1614be /             ext4       acl,user_xattr,discard 1 1
UUID=77ec7af0-cc2c-44a5-8bc3-6c7913273ab6 /home         ext4       acl,user_xattr        1 2
none                                      /tmp          tmpfs      defaults              0 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意我這邊使用的是檔案系統的 UUID 來掛載磁區，&lt;code&gt;/&lt;/code&gt; 的掛載磁區換成了 SSD，並且加上了 &lt;code&gt;discard&lt;/code&gt;
參數；另外使用 tmpfs 來掛載 &lt;code&gt;/tmp&lt;/code&gt; 目錄，以避免大量的暫存檔案存在 SSD，降低 SSD 的壽命。&lt;/p&gt;

&lt;p&gt;檔案系統的 UUID 可用指令 &lt;code&gt;ls -l /dev/disk/by-uuid&lt;/code&gt; 查詢。&lt;/p&gt;

&lt;h1 id=&#34;安裝開機啟動程式-bootloader&#34;&gt;安裝開機啟動程式 (bootloader)&lt;/h1&gt;

&lt;p&gt;首先要 chroot 到新的系統目錄：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mount --bind /dev /tmp/root2/dev
mount --bind /sys /tmp/root2/sys
mount --bind /proc /tmp/root2/proc
chroot /tmp/root2 /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更新 GRUB 設定檔：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;grub2-mkconfig -o /boot/grub2/grub.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安裝開機啟動程式到 SSD 的開機啟動磁區 (MBR)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;grub2-install /dev/sdX
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;退出 chroot 環境：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;卸載目錄：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;umount /tmp/root2/dev
umount /tmp/root2/sys
umount /tmp/root2/proc
umount /tmp/root2
umount /tmp/root
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新啟動電腦：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然後進入 BIOS，設定使用 SSD 做為開機硬碟，打完收工。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The First Post</title>
      <link>https://ramaxlo.github.io/blog/post/first/</link>
      <pubDate>Mon, 09 Jan 2017 23:11:44 +0800</pubDate>
      
      <guid>https://ramaxlo.github.io/blog/post/first/</guid>
      <description>&lt;p&gt;這是第一篇文章，用 &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; 產生，搭配 &lt;a href=&#34;https://github.com/tanksuzuki/hemingway&#34;&gt;Hemingway&lt;/a&gt;
主題。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>